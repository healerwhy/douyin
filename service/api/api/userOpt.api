syntax = "v1"

import "user.api"
import "video.api"

type FavoriteOptReq {
	Token      string `form:"token"`
	VideoId    int64  `form:"video_id"`
	ActionType int32  `form:"action_type"`
}

type FavoriteOptRes {
	Status
}

type CommentOptReq {
	IdWithTokenReq
	VideoId     string `form:"video_id"`
	ActionType  int32  `form:"action_type"`
	CommentText string `form:"comment_text"`
	CommentId   int64  `form:"comment_id"`
}

type Comment {
	Comment_id  int64  `json:"id"`
	User        Author `json:"user"`
	Content     string `json:"content"`
	Create_time string `json:"create_date"`
}

type CommentOptRes {
	Status
	Comment Comment `json:"comment,omitempty"`
}

@server(
	group : userOpt
	prefix : /douyin
	middleware: AuthJWT
)

service user-api {
	@doc "用户点赞"
	@handler FavoriteOpt
	post /favorite/action (FavoriteOptReq) returns (FavoriteOptRes)
	
	@doc "用户评论"
	@handler CommentOpt
	post /comment/action (CommentOptReq) returns (CommentOptRes)
}

type FavoriteListReq {
	IdWithTokenReq
}

type FavoriteListRes {
	Status
	FavoriteList []*PubVideo `json:"video_list,omitempty"`
}

type CommentListReq {
	IdWithTokenReq
}

type CommentListRes {
	Status
	CommentList []*Comment `json:"comment_list,omitempty"`
}

@server(
	group : userOpt
	prefix : /douyin
	middleware: AuthJWT
)
service user-api {
	@doc "用户点赞列表"
	@handler GetFavoriteList
	get /favorite/list (FavoriteListReq) returns (FavoriteListRes)
	
	@doc "视频评论列表"
	@handler GetCommentList
	get /comment/list (CommentListReq) returns (CommentListRes)
	
}