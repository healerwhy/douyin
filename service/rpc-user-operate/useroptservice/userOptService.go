// Code generated by goctl. DO NOT EDIT!
// Source: UserOptService.proto

package useroptservice

import (
	"context"

	"douyin/service/rpc-user-operate/userOptPb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddFavoriteReq      = userOptPb.AddFavoriteReq
	AddFavoriteResp     = userOptPb.AddFavoriteResp
	CancelFavoriteReq   = userOptPb.CancelFavoriteReq
	CancelFavoriteResp  = userOptPb.CancelFavoriteResp
	GetUserFavoriteReq  = userOptPb.GetUserFavoriteReq
	GetUserFavoriteResp = userOptPb.GetUserFavoriteResp
	GetUserFollowReq    = userOptPb.GetUserFollowReq
	GetUserFollowResp   = userOptPb.GetUserFollowResp

	UserOptService interface {
		// -----------------------userFavoriteList-----------------------
		AddFavorite(ctx context.Context, in *AddFavoriteReq, opts ...grpc.CallOption) (*AddFavoriteResp, error)
		CancelFavorite(ctx context.Context, in *CancelFavoriteResp, opts ...grpc.CallOption) (*CancelFavoriteResp, error)
		GetUserFavorite(ctx context.Context, in *GetUserFavoriteReq, opts ...grpc.CallOption) (*GetUserFavoriteResp, error)
		GetUserFollow(ctx context.Context, in *GetUserFollowReq, opts ...grpc.CallOption) (*GetUserFollowResp, error)
	}

	defaultUserOptService struct {
		cli zrpc.Client
	}
)

func NewUserOptService(cli zrpc.Client) UserOptService {
	return &defaultUserOptService{
		cli: cli,
	}
}

// -----------------------userFavoriteList-----------------------
func (m *defaultUserOptService) AddFavorite(ctx context.Context, in *AddFavoriteReq, opts ...grpc.CallOption) (*AddFavoriteResp, error) {
	client := userOptPb.NewUserOptServiceClient(m.cli.Conn())
	return client.AddFavorite(ctx, in, opts...)
}

func (m *defaultUserOptService) CancelFavorite(ctx context.Context, in *CancelFavoriteResp, opts ...grpc.CallOption) (*CancelFavoriteResp, error) {
	client := userOptPb.NewUserOptServiceClient(m.cli.Conn())
	return client.CancelFavorite(ctx, in, opts...)
}

func (m *defaultUserOptService) GetUserFavorite(ctx context.Context, in *GetUserFavoriteReq, opts ...grpc.CallOption) (*GetUserFavoriteResp, error) {
	client := userOptPb.NewUserOptServiceClient(m.cli.Conn())
	return client.GetUserFavorite(ctx, in, opts...)
}

func (m *defaultUserOptService) GetUserFollow(ctx context.Context, in *GetUserFollowReq, opts ...grpc.CallOption) (*GetUserFollowResp, error) {
	client := userOptPb.NewUserOptServiceClient(m.cli.Conn())
	return client.GetUserFollow(ctx, in, opts...)
}
