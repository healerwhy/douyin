// Code generated by goctl. DO NOT EDIT!
// Source: UserInfoService.proto

package server

import (
	"context"

	"douyin/service/rpc-user-info/internal/logic"
	"douyin/service/rpc-user-info/internal/svc"
	"douyin/service/rpc-user-info/userInfoPb"
)

type UserInfoServiceServer struct {
	svcCtx *svc.ServiceContext
	userInfoPb.UnimplementedUserInfoServiceServer
}

func NewUserInfoServiceServer(svcCtx *svc.ServiceContext) *UserInfoServiceServer {
	return &UserInfoServiceServer{
		svcCtx: svcCtx,
	}
}

// -----------------------user-----------------------
func (s *UserInfoServiceServer) Register(ctx context.Context, in *userInfoPb.RegisterReq) (*userInfoPb.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserInfoServiceServer) Login(ctx context.Context, in *userInfoPb.LoginReq) (*userInfoPb.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserInfoServiceServer) Info(ctx context.Context, in *userInfoPb.UserInfoReq) (*userInfoPb.UserInfoResp, error) {
	l := logic.NewInfoLogic(ctx, s.svcCtx)
	return l.Info(in)
}

func (s *UserInfoServiceServer) AuthsInfo(ctx context.Context, in *userInfoPb.AuthsInfoReq) (*userInfoPb.AuthsInfoResp, error) {
	l := logic.NewAuthsInfoLogic(ctx, s.svcCtx)
	return l.AuthsInfo(in)
}
